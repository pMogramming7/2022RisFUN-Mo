ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
col.iris<-ifelse(iris$Species=='setosa','purple',ifelse(iris$Species=='versicolor','blue','pink'))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'petal.length',
ylab = 'petal.width',
main = 'iris colorful',
pch = 19, cex = 2,
col = scales::alpha(col.iris, 0.3))
col.iris<-ifelse(iris$Species=='setosa','purple',ifelse(iris$Species=='versicolor','blue','pink'))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'petal.length',
ylab = 'petal.width',
main = 'iris colorful',
pch = 19, cex = 2,
col = scales::alpha(col.iris, 0.3))
* discription of plot (Legend)
ascol.iris
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend(x="bottomright", pch= 19, cex=1.0,
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
col.lev <- as.factor(col.iris)
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(scales::alpha(col.lev, 0.2)))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(scales::alpha(col.lev, 0.2)))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(as.factor(scales::alpha(col.iris, 0.2))))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(as.factor(scales::alpha(col.iris, 0.2))))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(scales::alpha(col.iris, 0.2)))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(scales::alpha(col.lev, 0.2)))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=levels(scales::alpha(col.lev, 0.2)))
str(col.lev)
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=scales::alpha(col.lev, 0.2))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'iris with legend',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5,
pch = 19, cex=2, las=1,
col = scales::alpha(col.iris, 0.2))
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=scales::alpha(col.lev, 0.2))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'petal.length',
ylab = 'petal.width',
main = 'iris colorful',
pch = 19, cex = 2,
col = scales::alpha(col.iris, 0.3))
col.iris<-ifelse(iris$Species=='setosa','purple',ifelse(iris$Species=='versicolor','blue','pink'))
plot(Petal.Length ~ Petal.Width, data = iris,
xlab = 'petal.length',
ylab = 'petal.width',
main = 'iris colorful',
pch = 19, cex = 2,
col = scales::alpha(col.iris, 0.3))
* discription of plot (Legend)
legend(x="bottomright", pch= 19, cex=1.0,
legend= c("versicolor","setosa", "virginica"), col=scales::alpha(col.lev, 0.2))
pairs(iris[1:4], pch=19, col = scales::alpha(col.iris, 0.2))
blossom <- NULL
blossom$year <- 2010:2019
blossom <- NULL
blossom$year <- 2010:2019
blossom$count.alaska <- c(3, 1, 5, 2, 3, 8, 4, 7, 6, 9)
blossom$count.canada <- c(4, 6, 5, 7, 10, 8, 10, 11, 15, 17)
as.data.frame(blossom)
plot(count.alaska ~ year,dat = blossom, type='l',
ylab = "No. of flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='c', pch=20, ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='d', pch=20, ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='c', pch=20, ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 0.5, col='red', ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
```{r, echo=TRUE}
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~ year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming") lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
plot.1 <- plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
lines(plot.1, count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
blossom <- NULL
blossom$year <- 2010:2019
blossom$count.alaska <- c(3, 1, 5, 2, 3, 8, 4, 7, 6, 9)
blossom$count.canada <- c(4, 6, 5, 7, 10, 8, 10, 11, 15, 17)
as.data.frame(blossom)
plot(count.alaska ~ year,dat = blossom, type='l',
ylab = "No. of flower blossoming")
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot.1 <- plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(plot.1, count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='l', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='o', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='b', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='p', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='h', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 2, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 2, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 5, lwd = 1, col='blue')
iris.ver<- subset(iris, Species == "versicolor")
iris.vir<- subset(iris, Species == "virginica")
y.rng <- range( c(iris.ver$Petal.Length, iris.vir$Petal.Length) , na.rm = TRUE)
x.rng <- range( c(iris.ver$Petal.Width, iris.vir$Petal.Width) , na.rm = TRUE)
# Plot an empty plot
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.vir, pch = 20,cex=2,
col =  scales::alpha('#fc03c6', 0.2))
# Add legend
legend("topleft", c("versicolor", "virginica"), pch = 19, cex=1.2,
col = c(rgb(0,0,1,0.10), scales::alpha('#fc03c6', 0.2)))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
iris.ver<- subset(iris, Species == "versicolor")
iris.vir<- subset(iris, Species == "virginica")
y.rng <- range( c(iris.ver$Petal.Length, iris.vir$Petal.Length) , na.rm = TRUE)
x.rng <- range( c(iris.ver$Petal.Width, iris.vir$Petal.Width) , na.rm = TRUE)
# Plot an empty plot
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.vir, pch = 20,cex=2,
col =  scales::alpha('#fc03c6', 0.2))
# Add legend
legend("topleft", c("versicolor", "virginica"), pch = 19, cex=1.2,
col = c(rgb(0,0,1,0.10), scales::alpha('#fc03c6', 0.2)))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
dev.off()
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
library(tidyverse)
setwd("D:/R_WD/Git linked/2022RisFUN-Mo")
library(tidyverse)
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
install.packages("sf")
install.packages("sp")
library(sf)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
library(tidyverse)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
dev.off()
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
dev.off()
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
install.packages("mapr")
install.packages(rgbif)
install.packages('rgbif')
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
library(mapr)
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
library(rgbif)
library(mapr)
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
map_ggplot(gbif.res) +
coord_sf(xlim = c(120, 123), ylim = c(21, 26), expand = FALSE)
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
plot(TWN1,col="grey",xlim=c(119,122.5), ylim=c(21.5,25.5), bg=colors()[431], axes=T)
library(raster)
TWN1 <- getData('GADM', country="TWN", level=0) # data Taiwan
JPN <- getData('GADM', country="JPN", level=0) # data Japan
class(TWN1) # those datasets are SpatialPolygonsDataFrame
par(mfrow = c(1, 2))
plot(TWN1,axes=T,bg=colors()[431],col='grey')
plot(JPN,axes=T,bg=colors()[431],col='grey')
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
dev.off()
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
dev.off()
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
install.packages("marmap")
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
library(marmap)
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
# define palette
blues <- colorRampPalette(c("darkblue", "cyan"))
greys <- colorRampPalette(c(grey(0.4),grey(0.99)))
# make the plot
plot.bathy(TW.bathy,
image=T,
deepest.isobath=c(-6000,-120,-30,0),
shallowest.isobath=c(-1000,-60,0,0),
step=c(2000,60,30,0),
lwd=c(0.3,1,1,2),
lty=c(1,1,1,1),
col=c("grey","black","black","black"),
drawlabels=c(T,T,T,F),
bpal = list(c(0,max(TW.bathy),greys(100)),c(min(TW.bathy),0,blues(100))),
land=T, xaxs="i"
)
install.packages("leaflet")
install.packages("leaflet")
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
getwd()
taiwan <- readOGR('D:/ASUS/Downloads/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
library(rgdal)
install.packages('rgdal')
library(rgdal)
install.packages('rgdal')
library(rgdal)
taiwan <- readOGR('D:/ASUS/Downloads/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
library(rgdal)
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
# Change style by addtiles
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
