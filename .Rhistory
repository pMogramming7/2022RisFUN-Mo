y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='p', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='h', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 0.5, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 5, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 2, lwd = 1, col='blue')
y.rng <- range(c(blossom$count.alaska, blossom$count.canada))
plot(count.alaska ~ year,dat = blossom, type='l', ylim = y.rng, pch=20, lwd = 2, col='red', ylab = "No. flower blossoming")
lines(count.canada ~ year, dat = blossom, type='b', lty = 5, lwd = 1, col='blue')
iris.ver<- subset(iris, Species == "versicolor")
iris.vir<- subset(iris, Species == "virginica")
y.rng <- range( c(iris.ver$Petal.Length, iris.vir$Petal.Length) , na.rm = TRUE)
x.rng <- range( c(iris.ver$Petal.Width, iris.vir$Petal.Width) , na.rm = TRUE)
# Plot an empty plot
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.vir, pch = 20,cex=2,
col =  scales::alpha('#fc03c6', 0.2))
# Add legend
legend("topleft", c("versicolor", "virginica"), pch = 19, cex=1.2,
col = c(rgb(0,0,1,0.10), scales::alpha('#fc03c6', 0.2)))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
iris.ver<- subset(iris, Species == "versicolor")
iris.vir<- subset(iris, Species == "virginica")
y.rng <- range( c(iris.ver$Petal.Length, iris.vir$Petal.Length) , na.rm = TRUE)
x.rng <- range( c(iris.ver$Petal.Width, iris.vir$Petal.Width) , na.rm = TRUE)
# Plot an empty plot
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.vir, pch = 20,cex=2,
col =  scales::alpha('#fc03c6', 0.2))
# Add legend
legend("topleft", c("versicolor", "virginica"), pch = 19, cex=1.2,
col = c(rgb(0,0,1,0.10), scales::alpha('#fc03c6', 0.2)))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
dev.off()
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
# Add points for versicolor
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2,
col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
plot(Petal.Length ~ Petal.Width, dat = iris.ver,
xlab = 'Petal width (cm)',
ylab = 'Petal length (cm)',
main = 'Petal width and length of iris flower',
cex.axis=1.0, cex.lab=1.5, cex.main=1.5, type='n',
xlim=x.rng,  ylim=y.rng)
points(Petal.Length ~ Petal.Width, dat = iris.ver, pch = 20,cex=2, col = rgb(0,0,1,0.10))
library(tidyverse)
setwd("D:/R_WD/Git linked/2022RisFUN-Mo")
library(tidyverse)
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
install.packages("sf")
install.packages("sp")
library(sf)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
library(tidyverse)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf(color = "black", fill = "lightgreen") +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)"))
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
ggsave("Figures/Datamap.pdf")
dev.off()
ggsave("Figures/Datamap.pdf")
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
ggplot(data = world) +
geom_sf() +
coord_sf(expand = FALSE) +
xlab("Longitude") + ylab("Latitude") +
ggtitle("World map", subtitle = paste0("(", length(unique(world$name)), " countries)")) +
geom_sf(color = "black", fill = "lightgreen")
dev.off()
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
install.packages("mapr")
install.packages(rgbif)
install.packages('rgbif')
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
library(mapr)
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
library(rgbif)
library(mapr)
gbif.res <- occ_search(scientificName = "Urocissa caerulea", limit = 1200)
map_ggplot(gbif.res) +
coord_sf(xlim = c(120, 123), ylim = c(21, 26), expand = FALSE)
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
plot(TWN1,col="grey",xlim=c(119,122.5), ylim=c(21.5,25.5), bg=colors()[431], axes=T)
library(raster)
TWN1 <- getData('GADM', country="TWN", level=0) # data Taiwan
JPN <- getData('GADM', country="JPN", level=0) # data Japan
class(TWN1) # those datasets are SpatialPolygonsDataFrame
par(mfrow = c(1, 2))
plot(TWN1,axes=T,bg=colors()[431],col='grey')
plot(JPN,axes=T,bg=colors()[431],col='grey')
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
dev.off()
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
dev.off()
plot (TWN1, axes=T, xlim=c(121,122), ylim=c(24,25.5), bg=colors()[431],col='gray')
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
install.packages("marmap")
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
library(marmap)
# query
TW.bathy <- getNOAA.bathy(lon1=118,lon2=124, lat1=21,lat2=26,resolution=1) # don't put too wide / resolution: 1
# define palette
blues <- colorRampPalette(c("darkblue", "cyan"))
greys <- colorRampPalette(c(grey(0.4),grey(0.99)))
# make the plot
plot.bathy(TW.bathy,
image=T,
deepest.isobath=c(-6000,-120,-30,0),
shallowest.isobath=c(-1000,-60,0,0),
step=c(2000,60,30,0),
lwd=c(0.3,1,1,2),
lty=c(1,1,1,1),
col=c("grey","black","black","black"),
drawlabels=c(T,T,T,F),
bpal = list(c(0,max(TW.bathy),greys(100)),c(min(TW.bathy),0,blues(100))),
land=T, xaxs="i"
)
install.packages("leaflet")
install.packages("leaflet")
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
getwd()
taiwan <- readOGR('D:/ASUS/Downloads/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
library(rgdal)
install.packages('rgdal')
library(rgdal)
install.packages('rgdal')
library(rgdal)
taiwan <- readOGR('D:/ASUS/Downloads/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
library(leaflet)
library(rgdal)
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
FRE <- paste(sep = "<br/>",
"<b><a href='https://www.dipintothereef.com/'>FRELAb TAIWAN</a></b>",
"Functional Reef Ecology Lab",
"Institute of Oceanography, NTU")
# Change style by addtiles
leaflet(taiwan) %>%
addPolygons(weight=0.5) %>%
addTiles(group="Kort") %>%
addPopups(121.53725, 25.021252, FRE, options = popupOptions(closeButton = FALSE))
# MAPPING
library(maptools) #Basic Map
# MAPPING
library(maptools) #Basic Map
library(raster) #for GADM
library(rgdal) #for gpx and other "geospatial" data
#Using ggplot2
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
#For GBIF DATA
#library(rgbif)
#For distribution map
#library(mapr)
library(marmap) #Bathymetric map等深等壓線圖
library(leaflet) #leaflet in webpage or markdown
knitr::opts_chunk$set(echo = TRUE)
# MAPPING
library(maptools) #Basic Map
library(raster) #for GADM
library(rgdal) #for gpx and other "geospatial" data
#Using ggplot2
library(tidyverse)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
#For GBIF DATA
#library(rgbif)
#For distribution map
#library(mapr)
library(marmap) #Bathymetric map等深等壓線圖
library(leaflet) #leaflet in webpage or markdown
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
plot(taiwan,axes=T,bg=colors()[431],col='grey')
leaflet(taiwan) %>%
```
leaflet(taiwan) %>%  addPolygons(weight=0.5)
taiwan$COUNTYNAME
taiwan$COUNTYNAMENG
taiwan$COUNTYNAMENG
taiwan$COUNTYNAMEENG
taiwan$COUNTYENG
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
leaflet(taiwan) %>%  addPolygons(weight=0.5)
WuLai_waterfall <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
typeof(WuLai_waterfall)
WuLai_waterfall <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
typeof(WuLai_waterfall)
st_layers(WuLai_waterfall)
WuLai_waterfall <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
st_layers(WuLai_waterfall)
plot(WuLai_waterfall, main='Line')
WuLai_waterfall <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
plot(WuLai_waterfall, main='Line')
WuLai <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
plot(WuLai_waterfall, main='Line')
plot(WuLai, main='Line')
WuLai <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
plot(WuLai, main='Line')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
leaflet(taiwan) %>%  addPolygons(weight=0.5)
%>% addProviderTiles('Stamen.Watercolor')
leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor')
st_layers(WuLai)
WuLai <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
st_layers(WuLai)
WuLai <- readOGR(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
st_layers(WuLai)
WuLai <- load(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
WuLai <- load ("D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
WuLai <- load("D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
WuLai <- read.gpx("D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
WuLai <- readGPX("D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx")
WuLai <- read_sf(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
ggplot(WuLai)
ggplot(WuLai)+geom_sf
ggplot(WuLai) + geom_sf()
ggplot(WuLai) + geom_sf() + theme_bw()
leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>% ggplot(WuLai)
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%
taiwan$COUNTYENG
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
dev.off
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%
```
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_mapping/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943/COUNTY_MOI_1090820.shp', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
dev.off
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor')
taiwan
ggplot(taiwan)
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5)
final_result
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor')
final_result
WuLai <- read_sf(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
ggplot(WuLai) + geom_sf() + theme_bw()
WuLai_track <- WuLai %>%
st_combine() %>%
st_cast(to = "LINESTRING") %>%
st_sf()
WuLai <- read_sf(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
ggplot(WuLai) + geom_sf() + theme_bw()
WuLai_track <- WuLai %>%
st_combine() %>%
st_cast(to = "LINESTRING") %>%
st_sf()
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track)
final_result
final_result <- leaflet() %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track)
FRE <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224</a></b>",
"Wu-Lai waterfall")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(24.84746, 121.55192, FRE, options = popupOptions(closeButton = FALSE))
final_result
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, FRE, options = popupOptions(closeButton = FALSE))
final_result
FRE <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224</a></b>",
"Wu-Lai waterfall", "Mo")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, FRE, options = popupOptions(closeButton = FALSE))
final_result
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = FALSE))
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224</a></b>",
"Wu-Lai waterfall", "Mo")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = FALSE))
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224",
"Wu-Lai waterfall", "Mo")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = FALSE))
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224</a></b>",
"Wu-Lai waterfall", "maybe it's too cold for now")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224'>WuLai Waterfall</a></b>",
"Wu-Lai waterfall", "maybe it's too cold for now")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224'>WuLai Waterfall</a></b>", "maybe it's too cold for now")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224'>WuLai Waterfall</a></b>", "maybe not now, it's too cold outside")
final_result <- leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
final_result <- leaflet(WuLai_track) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
final_result
final_result <- leaflet(WuLai_track) %>% leaflet(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result <- leaflet(WuLai_track) %>% addLayer(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
ggplot(taiwan)
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
ggplot(taiwan)
ggplot(data = taiwan) + geom_sf() + theme_bw()
rlang::last_error()
taiwan <- readOGR('D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/mapdata202209220943', use_iconv=TRUE, encoding='UTF-8')
ggplot(data = taiwan) + geom_sf() + theme_bw()
plot(taiwan,axes=T,bg=colors()[431],col='white')
WLwf <- paste(sep = "<br/>",
"<b><a href='https://newtaipei.travel/zh-tw/attractions/detail/402224'>WuLai Waterfall</a></b>", "maybe not now, it's too cold outside")
final_result <- leaflet(WuLai_track) %>% add(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
Map <- plot(taiwan,axes=T,bg=colors()[431],col='white')
final_result <- leaflet(WuLai_track) %>% addLayer(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result <- leaflet(WuLai_track) %>% addLayer(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result <- leaflet(WuLai_track) %>% addtiles(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result <- leaflet(WuLai_track) %>% addTiles(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
final_result <- leaflet(WuLai_track) %>% addTiles(taiwan) %>%  addPolygons(weight=0.5) %>% addProviderTiles('Stamen.Watercolor') %>%  addPolylines(data = WuLai_track) %>% addPopups(121.55192, 24.84746, WLwf, options = popupOptions(closeButton = TRUE))
final_result
Map <- plot(taiwan,axes=T,bg=colors()[431],col='white', opacity = 0.5)
Map <- plot(taiwan,axes=T,bg=colors()[431],col='white', opacity = 0.1)
WuLai_track <- WuLai %>%
st_combine() %>%
st_cast(to = "LINESTRING") %>%
st_sf() st_coordinates(xlim = c(118, 128), ylim = c(17, 27), expand = FALSE)
st_coordinates(xlim = c(118, 128), ylim = c(17, 27), expand = FALSE)
WuLai <- read_sf(dsn="D:/R_WD/Git linked/2022RisFUN-Mo/Mapping/Data_Mapping/WuLai-waterfall.gpx",layer="tracks")
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(118, 128), ylim = c(17, 27), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(123, 24), ylim = c(17, 27), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(123, 124), ylim = c(17, 27), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.45, 121.55), ylim = c(24.80, 24.90), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.52, 121.58), ylim = c(24.80, 24.90), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.52, 121.58), ylim = c(24.80, 25.00), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.52, 121.58), ylim = c(24.80, 25.30), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.52, 121.58), ylim = c(24.80, 25.10), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.48, 121.63), ylim = c(24.80, 25.10), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.44, 121.58), ylim = c(24.80, 25.10), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.46, 121.62), ylim = c(24.80, 25.10), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.38, 121.68), ylim = c(24.80, 25.10), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.38, 121.68), ylim = c(24.80, 25.05), expand = FALSE)
ggplot(WuLai) + geom_sf() + theme_bw() + coord_sf(xlim = c(121.45, 121.65), ylim = c(24.80, 25.05), expand = FALSE)
